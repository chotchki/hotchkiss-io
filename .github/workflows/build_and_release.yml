name: Build and Release
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build
    runs-on: self-hosted
    strategy:
      matrix:
        BUILD_TARGET: [release] # refers to a cargo profile
    outputs:
      release_built: ${{ steps.set-output.outputs.release_built }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install cargo-bundle from crates.io
        uses: baptiste0928/cargo-install@v3
        with:
          crate: cargo-bundle
      - name: Run tests in "${{ matrix.BUILD_TARGET }}" mode
        run: cargo test --profile ${{ matrix.BUILD_TARGET }}
      - name: Build Installer
        run: cargo bundle --release
      # Signing hints from the excellent tutorial: https://dennisbabkin.com/blog/?t=how-to-get-certificate-code-sign-notarize-macos-binaries-outside-apple-app-store
      - name: Unlock the keychain
        run: security unlock-keychain -p "${{secrets.KEYCHAIN}}" login.keychain
      - name: Sign the binary
        run: xcrun codesign -s "G53N9PU948" -f --timestamp -o runtime -i "io.hotchkiss.web" target/release/bundle/osx/hotchkiss-io.app
      - name: Lock the keychain
        run: security lock-keychain login.keychain
